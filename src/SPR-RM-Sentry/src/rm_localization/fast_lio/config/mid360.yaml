/**:
    ros__parameters:
        use_standard_pcl_cbk: false            #false livox    true pcd      # Whether to use ros standard pointcloud
        timestamp_offset: 0.1            # Offset seconds of TF transformation(odom to baselink)

        common:
            lid_topic:  "/filtered_pointcloud"   # "/livox/lidar"
            imu_topic:  "/livox/imu/filtered" #livox/imu  /filtered
            time_sync_en: false         # ONLY turn on when external time synchronization is really not possible
            time_offset_lidar_to_imu: 0.0 # Time offset between lidar and IMU calibrated by other algorithms, e.g. LI-Init (can be found in README).
                                        # This param will take effect no matter what time_sync_en is. So if the time offset is not known exactly, please set as 0.0

        preprocess:
            lidar_type: 1              # 1 for Livox serials LiDAR, 2 for Velodyne LiDAR, 3 for ouster LiDAR, 
            scan_line:  32
            blind: 0.3  #0.4  0.55
            timestamp_unit: 3
            scan_rate: 10

            

        mapping:
            acc_cov: 0.1
            gyr_cov: 0.1
            b_acc_cov: 0.0001
            b_gyr_cov: 0.0001
            fov_degree:    360.0
            det_range:     200.0
            extrinsic_est_en:  false      # true: enable the online estimation of IMU-LiDAR extrinsic,
            extrinsic_T: [ -0.011, -0.02329, 0.04412 ]
            extrinsic_R: [1., 0., 0.,
                          0., 1., 0.,
                          0., 0., 1.]


        publish:
            path_en: true                # true: publish Path
            scan_publish_en:  true       # false: close all the point cloud output
            dense_publish_en: true       # false: low down the points number in a global-frame point clouds scan.
            scan_bodyframe_pub_en: true  # true: output the point cloud scans in IMU-body-frame

        # when you use docker, you should enter the absolute path of in docker container
        map_file_path: "/home/spr/Sentry_ws/src/SPR-RM-Sentry/src/rm_localization/fast_lio/PCD/result.pcd" 
        pcd_save:
            pcd_save_en: true
            interval: -1                 # how many LiDAR frames saved in each pcd file; 
                                        # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.
        
        traj_save:
            traj_save_en: false
            traj_file_path: "/root/ros2_ws/src/FAST_LIO/traj/trajectory.txt" # when you use docker, you should enter the absolute path of in docker container
